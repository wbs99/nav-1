{"mappings":";MAAM,+CAAS,GAAG,CAAC,EAAC,SAAW;MACzB,6CAAO,GAAG,+CAAS,CAAC,IAAI,EAAC,OAAS,EAAE,EAAA,0CAA4C;;MACtD,uCAAzB,GAAG,YAAY,CAAC,OAAO,EAAC,CAAG,EAAE,EAAA,QAAU;;MACpC,6CAAG,GAAG,IAAI,CAAC,KAAK,CAAC,uCAAC,CAAE,EAAA,gBAAkB;;MAGhC,6CAAH,GAAG,6CAAO;;QAClB,IAAI,GAAC,CAAG;QAAE,QAAQ,GAAC,IAAM;QAAE,GAAG,GAAC,wBAA0B;;;QACzD,IAAI,GAAC,CAAG;QAAC,QAAQ,GAAC,IAAM;QAAE,GAAG,GAAC,sBAAwB;;;MAIrD,iDAAW,IAAI,GAAG;WACf,GAAG,CAAC,OAAO,EAAC,QAAU,OAC1B,OAAO,EAAC,OAAS,OACjB,OAAO,EAAC,IAAM,OACd,OAAO,aAAa,CAAA,EAAA,wDAA0D;;MAG7C,4CAA1B;IACV,+CAAS,CAAC,IAAI,EAAC,aAAe,GAAE,MAAM;IACtC,6CAAO,CAAC,OAAO,EAAE,IAAI,EAAC,KAAK;cACnB,GAAG,GAAG,CAAC,EACZ,kEAEyB,EAAE,IAAI,CAAC,IAAI,CAAC,sCACZ,EAAE,iDAAW,CAAC,IAAI,CAAC,GAAG,EAAE,sMAO7C,GAAG,YAAY,CAAC,6CAAO;QAC3B,GAAG,CAAC,EAAE,EAAC,KAAO;YACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;;QAEtB,GAAG,CAAC,EAAE,EAAC,KAAO,IAAC,MAAQ,IAAE,CAAC;YACxB,CAAC,CAAC,eAAe,GAAG,CAAA,EAAA,0CAA4C;YACpC,6CAArB,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,EAAE,CAAA,EAAA,MAAQ;YAC5B,4CAAE,GAAG,CAAA,EAAA,mCAAqC;;;;AAKlC,4CAAZ;AAEN,CAAC,EAAC,UAAY,GACT,EAAE,EAAC,KAAO;QACH,GAAG,GAAG,MAAM,CAAC,MAAM,EAAC,uCAAe,EAA4B,EAAA,2BAA6B;;QACjD,GAAzC,CAAC,OAAO,EAAC,IAAM,OAAI,CAAC,EACtB,GAAG,IAAG,QAAU,IAAG,GAAG;IAE1B,OAAO,CAAC,GAAG,CAAC,GAAG;IACf,6CAAO,CAAC,IAAI;QACV,IAAI,EAAE,iDAAW,CAAC,GAAG,EAAE,CAAC,EAAE,WAAW;QACrC,GAAG,EAAE,GAAG;;IAEV,4CAAM;;AAId,MAAM,CAAC,cAAc;UACb,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,6CAAO;IACrC,YAAY,CAAC,OAAO,EAAC,CAAG,GAAE,MAAM;;AAGlC,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAC,QAAU,IAAE,CAAC;iBACjB,GAAG,MAAI,CAAE,EAAA,0BAAsB;;YAC9B,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,6CAAO,CAAC,MAAM,EAAE,CAAC,OAC7B,6CAAO,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,OAAO,GAAG,EACtC,MAAM,CAAC,IAAI,CAAC,6CAAO,CAAC,CAAC,EAAE,GAAG","sources":["src/main.js"],"sourcesContent":["const $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('li.last') //找到新增网站之前的最后一个 li\r\nconst x = localStorage.getItem('x') //读出 x\r\nconst xObject = JSON.parse(x) //把x变成对象\r\n\r\n\r\nconst hashMap = xObject|| [ //如果xObject存在，就用xObject，不存在就用写的默认的属性\r\n    {logo:'B', logoType:'text', url:'https://www.bilibili.com'},\r\n    {logo:'G',logoType:'text', url:'https://www.google.com'},\r\n]\r\n\r\n\r\nconst simplifyUrl = (url) => {\r\n  return url.replace('https://', '')\r\n    .replace('http://', '')\r\n    .replace('www.', '')\r\n    .replace(/\\/.*/, '') // .*是/后面的任何东西， 删除 / 开头的内容\r\n}\r\n\r\nconst render = () =>{\r\n  $siteList.find('li:not(.last)').remove()\r\n  hashMap.forEach((node,index) => {\r\n    const $li = $(\r\n    `<li>\r\n          <div class=\"site\">\r\n            <div class=\"logo\">${node.logo}</div>\r\n            <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n            <div class=\"close\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"#icon-close\"></use>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n    </li>`).insertBefore($lastLi)\r\n     $li.on('click', () => { //点击每一个导航的时候实现跳转\r\n      window.open(node.url)\r\n    })\r\n    $li.on('click','.close',(e) => {\r\n      e.stopPropagation() //阻止冒泡，点击关闭图标不跳转\r\n      hashMap.splice(index,1) //删除\r\n      render() //删除之后，重新渲染 hashMap\r\n    })\r\n})\r\n}\r\n\r\nrender()\r\n\r\n$('.addButton')\r\n    .on('click', () =>{\r\n        let url = window.prompt('请问你要添加的网址是什么？') //得到用户输入的网址\r\n        if(url.indexOf('http')!==0){  //如果用户输入的地址不是http开头的\r\n            url = 'https://' + url\r\n        } \r\n        console.log(url)\r\n        hashMap.push({\r\n          logo: simplifyUrl(url)[0].toUpperCase(), //简化网址，新增网站后显示简化的后的第一个大写字母\r\n          url: url\r\n        })\r\n        render()\r\n    })\r\n\r\n\r\nwindow.onbeforeunload = () => { //关闭页面的时候把当前的 hashMap 存到 x 里面\r\n  const string = JSON.stringify(hashMap)\r\n  localStorage.setItem('x', string)\r\n}\r\n\r\n$(document).on('keypress',(e)=> {\r\n    const {key} = e //等价于const key = e.key\r\n    for(let i = 0; i<hashMap.length; i++){\r\n      if(hashMap[i].logo.toLowerCase() === key){\r\n        window.open(hashMap[i].url)\r\n      }\r\n    }\r\n})"],"names":[],"version":3,"file":"index.HASH_REF_83d4711ea689fc47f03deb70f03c99b4.js.map"}